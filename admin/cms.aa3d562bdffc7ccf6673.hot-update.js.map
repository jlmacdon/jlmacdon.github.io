{"version":3,"file":"cms.aa3d562bdffc7ccf6673.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;AAGA;AAKA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AAjCA;AAmCA;AACA;AACA;AACA;AACA;AACA;AALA;;AAQA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;AAbA;AAeA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA","sources":["webpack://gatsby-starter-netlify-cms/./src/templates/how-it-works-page.js","webpack://gatsby-starter-netlify-cms/webpack/runtime/getFullHash"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport { getImage } from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\nimport FullWidthImage from \"../components/FullWidthImage\";\nimport Tile from '../components/Tile'\n\n// eslint-disable-next-line\nexport const HowItWorksPageTemplate = ({\n  image,\n  title,\n  mainpitch,\n  process,\n}) => {\n  const heroImage = getImage(image) || image;\n\n  return (\n    <div>\n      <FullWidthImage img={heroImage} title={title} />\n      <div className=\"column is-10 is-offset-1 padding-unset has-text-centered\">\n        <section>\n          <h2 className=\"has-text-weight-bold \">{mainpitch.title}</h2>\n          <div className=\"med-text\">{mainpitch.description}</div>\n        </section>\n        <section>\n          <div className=\"columns is-multiline section-padding\">\n            <div className=\"column padding-unset\">\n              {process.map(({ processIcon, processName, processDescription }) => {\n                return <Tile icon={processIcon} name={processName} description={processDescription} />\n              })}\n            </div>\n            <div className=\"column padding-unset\">\n              {process.map(({ benefitsIcon, benefitsName, benefitsDescription }) => {\n                return <Tile icon={benefitsIcon} name={benefitsName} description={benefitsDescription} />\n              })}\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nHowItWorksPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n};\n\nconst HowItWorksPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <HowItWorksPageTemplate\n        title={frontmatter.title}\n        image={frontmatter.image}\n        mainpitch={frontmatter.mainpitch}\n        process={frontmatter.process}\n      />\n    </Layout>\n  );\n};\n\nHowItWorksPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default HowItWorksPage;\n\nexport const howItWorksPageQuery = graphql`\n  query HowItWorksPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            gatsbyImageData(quality: 100, layout: FULL_WIDTH)\n          }\n        }\n        mainpitch {\n          title\n          description\n        }\n        process {\n          processIcon {\n            childImageSharp {\n              gatsbyImageData(width: 60, quality: 100, layout: FULL_WIDTH)\n            }\n          }\n          processName\n          processDescription\n          benefitsIcon {\n            childImageSharp {\n              gatsbyImageData(width: 60, quality: 100, layout: FULL_WIDTH)\n            }\n          }\n          benefitsName\n          benefitsDescription\n        }\n      }\n    }\n  }\n`;\n","__webpack_require__.h = function() { return \"85cf0a0ceba7e7767f5c\"; }"],"names":[],"sourceRoot":""}