{"version":3,"file":"component---src-templates-team-page-js-f0d6b60d4f661fc5c87b.js","mappings":"oKA0CA,IAtC+B,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACrCC,EAAa,CAAEC,aAAcF,GAAkB,OAErD,EAA6CD,EAArCI,IAAAA,OAAR,MAAc,GAAd,EAAkBC,EAA2BL,EAA3BK,gBAAiBC,EAAUN,EAAVM,MAEnC,OAAMA,GAAWA,EAAMD,gBAEnB,gBAAC,EAAAE,EAAD,CACED,MAAOA,EAAMD,gBAAgBG,gBAC7BC,MAAOP,EACPE,IAAKA,IAGEC,EAET,gBAAC,EAAAE,EAAD,CACED,MAAOD,EAAgBG,gBACvBC,MAAOP,EACPE,IAAKA,IAIAE,EACF,uBAAKG,MAAO,CAACP,WAAAA,GAAaQ,IAAKJ,EAAOF,IAAKA,IAE3C,O,0ICGX,EA5BoB,SAAC,GAAoB,IAAlBO,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC3B,OACE,uBAAKC,UAAS,wBAAkC,UAATD,EAAmB,iCAAmC,uBAC1FD,EAAKG,KAAI,SAACC,GACT,IAAQC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,YAAaX,EAAUS,EAAVT,MAC3B,OACE,uBAAKO,UAAS,wBAAkC,UAATD,EAAmB,iCAAmC,oBAC3F,uBAAKC,UAAoB,UAATD,EAAmB,oBAAsB,qBACvD,gBAACM,EAAA,EAAD,CAAwBlB,UAAW,CAAEM,MAAOA,EAAOF,IAAKY,GAAQf,OAAiB,UAATW,EAAmB,MAAQ,SAErG,2BACE,uBAAKC,UAAU,YAAYG,GAC1BC,EAAYE,MAAM,MAAML,KAAI,SAAAM,GAAI,OAAI,uBAAKP,UAAU,cAAcO,aCRnEC,EAAmB,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACjC,OACE,uBAAKE,UAAU,cACb,uBAAKA,UAAU,4DACb,+BACE,sBAAIA,UAAU,wBAAwBF,EAAKW,SAASC,SACpD,gBAAC,EAAD,CAAMZ,KAAMA,EAAKW,SAASE,QAASZ,KAAK,YAG5C,uBAAKC,UAAU,4DACb,+BACE,sBAAIA,UAAU,wBAAwBF,EAAKc,MAAMF,SACjD,gBAAC,EAAD,CAAMZ,KAAMA,EAAKc,MAAMD,QAASZ,KAAK,YAGzC,uBAAKC,UAAU,0CACb,+BACE,uBAAKA,UAAU,uBACb,sBAAIA,UAAU,0CAA0CF,EAAKe,QAAQH,SACrE,uBAAKV,UAAU,oBACb,gBAACK,EAAA,EAAD,CAAwBlB,UAAW,CAAEM,MAAOK,EAAKe,QAAQC,KAAMvB,IAAK,mBAGxE,uBAAKS,UAAU,mBACb,gBAAC,EAAD,CAAMF,KAAMA,EAAKe,QAAQF,QAASZ,KAAK,eA8CnD,EApBiB,SAAC,GAAc,IACtBgB,EADqB,EAAXC,KACWC,eAArBF,YAER,OACE,gBAACG,EAAA,EAAD,KACE,gBAACV,EAAD,CACEV,KAAMiB,EAAYjB","sources":["webpack://gatsby-starter-netlify-cms/./src/components/PreviewCompatibleImage.js","webpack://gatsby-starter-netlify-cms/./src/components/Bios.js","webpack://gatsby-starter-netlify-cms/./src/templates/team-page.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo, radius }) => {\n  const imageStyle = { borderRadius: radius ? radius : \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport PreviewCompatibleImage from \"./PreviewCompatibleImage\"\n\nexport const Bios = ({ bios, size }) => {\n  return (\n    <div className={`columns is-centered ${size === 'large' ? 'is-multiline has-text-centered' : 'bio-content-column'}`}>\n      {bios.map((bio) => {\n        const { name, description, image } = bio\n        return (\n          <div className={`bio-content-spacing ${size === 'large' ? 'column is-6 bio-content-border' : 'bio-content-row'}`}>\n            <div className={size === 'large' ? 'bio-content-large' : 'bio-content-small'}>\n              <PreviewCompatibleImage imageInfo={{ image: image, alt: name }} radius={size === 'large' ? '8px' : '50%'} />\n            </div>\n            <div>\n              <div className=\"med-text\">{name}</div>\n              {description.split('>-').map(line => <div className=\"small-text\">{line}</div>)}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nBios.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n  size: PropTypes.string.isRequired,\n}\n\nexport default Bios;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Bios from '../components/Bios'\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\"\n\n// eslint-disable-next-line\nexport const TeamPageTemplate = ({ bios }) => {\n  return (\n    <div className=\"nav-border\">\n      <div className=\"column is-10 is-offset-1 has-text-centered padding-unset\">\n        <section>\n          <h2 className=\"has-text-weight-bold\">{bios.founders.heading}</h2>\n          <Bios bios={bios.founders.content} size=\"large\" />\n        </section>\n      </div>\n      <div className=\"column is-10 is-offset-1 has-text-centered padding-unset\">\n        <section>\n          <h2 className=\"has-text-weight-bold\">{bios.legal.heading}</h2>\n          <Bios bios={bios.legal.content} size=\"large\" />\n        </section>\n      </div>\n      <div className=\"column is-10 is-offset-1 padding-unset\">\n        <section>\n          <div className=\"bio-support-heading\">\n            <h2 className=\"has-text-weight-bold has-text-centered\">{bios.support.heading}</h2>\n            <div className=\"bio-support-logo\">\n              <PreviewCompatibleImage imageInfo={{ image: bios.support.logo, alt: 'Tepper Logo' }} />\n            </div>\n          </div>\n          <div className=\"section-padding\">\n            <Bios bios={bios.support.content} size=\"small\" />\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nTeamPageTemplate.propTypes = {\n  bios: PropTypes.shape({\n    founders: PropTypes.shape({\n      heading: PropTypes.string.isRequired,\n      content: PropTypes.array.isRequired,\n    }).isRequired,\n    legal: PropTypes.shape({\n      heading: PropTypes.string.isRequired,\n      content: PropTypes.array.isRequired,\n    }).isRequired,\n    support: PropTypes.shape({\n      heading: PropTypes.string.isRequired,\n      logo: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n      content: PropTypes.array.isRequired,\n    }).isRequired,\n  }),\n};\n\nconst TeamPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <TeamPageTemplate\n        bios={frontmatter.bios}\n      />\n    </Layout>\n  );\n};\n\nTeamPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default TeamPage;\n\nexport const teamPageQuery = graphql`\n  query TeamPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        bios {\n          founders {\n            heading\n            content {\n              name\n              description\n              image {\n                childImageSharp {\n                  gatsbyImageData(width: 240, quality: 72, layout: FULL_WIDTH)\n                }\n              }\n            }\n          }\n          legal {\n            heading\n            content {\n              name\n              description\n              image {\n                childImageSharp {\n                  gatsbyImageData(width: 240, quality: 72, layout: FULL_WIDTH)\n                }\n              }\n            }\n          }\n          support {\n            heading\n            logo {\n              childImageSharp {\n                gatsbyImageData(width: 84, quality: 72, layout: FULL_WIDTH)\n              }\n            }\n            content {\n              name\n              description\n              image {\n                childImageSharp {\n                  gatsbyImageData(width: 240, quality: 72, layout: FULL_WIDTH)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["imageInfo","radius","imageStyle","borderRadius","alt","childImageSharp","image","G","gatsbyImageData","style","src","bios","size","className","map","bio","name","description","PreviewCompatibleImage","split","line","TeamPageTemplate","founders","heading","content","legal","support","logo","frontmatter","data","markdownRemark","Layout"],"sourceRoot":""}